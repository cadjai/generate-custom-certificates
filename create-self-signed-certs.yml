- name: ' Generate custom signed certificates'
  hosts: localhost
  become: yes
  vars:
    module: "generate-custom-certs"
    ansible_name_module: " Generate custom signed certificates | {{ module }}"
  vars_files:
    - 'vars/certs.yml'
  pre_tasks:

  tasks:
    - name: '{{ ansible_name_module }} | file |  Ensure the certs directory exist'
      ansible.builtin.file:
        path: "{{ certs_dir }}"
        state: directory
        mode: '0755'
      register: cert_dir_created

    - name: '{{ ansible_name_module }} | import_role | Import ca creation tasks'
      ansible.builtin.import_role:
        name: generate-self-signed-certificates-and-ca
        tasks_from: generate-self-signed-ca.yml
      vars:
        cert_cm: '{{ ca_cert_cm }}'
        is_ca_cert: 'true'
        is_ca_csr: 'true'
        cert_key_file: '{{ ca_key_file }}'
        cert_csr_file: '{{ ca_csr_file }}'
      when:
        - generate_ca is defined
        - generate_ca | bool
      register: ca_generated

    - name: '{{ ansible_name_module }} | import_role | Import certs creation tasks'
      ansible.builtin.include_role:
        name: generate-self-signed-certificates-and-ca
        tasks_from: generate-self-signed-certifate.yml
      loop: "{{ app_certs }}"
      when:
        - app_certs is defined
        - app_certs | type_debug == "list"
        - app_certs | length > 0
        - item is defined
        - item | type_debug == "dict"
        - item.cert_file is defined
        - item.cert_file != ''
        - item.cert_key_file is defined
        - item.cert_key_file != ''
      vars:
        csr_extension: "{{ item.cert_file.split('.')[0] + '.csr' }}"
        cert_cm: "{{ item.cert_cm }}"
        is_ca_cert: "{{ item.is_ca_cert | default('false', true) }}"
        is_ca_csr: "{{ item.is_ca_csr | default('false', true) }}"
        cert_file: "{{ item.cert_file }}"
        cert_csr_file: "{{ item.cert_csr_file | default(csr_extension, true) }}"
        cert_key_file: "{{ item.cert_key_file }}"
      register: app_cert_generated
